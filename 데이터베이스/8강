01 데이터베이스 설계 단계



1단계: 요구 사항 분석

데이터베이스의 용도파악 -> 요구 사항 명세서

2단계: 개념적 설계

DMBS에 독립적인 개념적 구조 설계

->개념적 스키마(E-R 다이어 그램)

3단계: 논리적 설계

DBMS에 적합한 논리적 구조 설계

->논리적 스키마(릴레이션 스키마)

4단계: 물리적 설계

DBMS로 구현 가능한 물리적 구조 설계

->물리적 스키마

5단계: 구현

SQL문을 작성한 후 이를 DBMS에서 실행하여 데이터베이스 생성



 

02 요구사항 분석

사용자의 범위 결정 -> 해당 사용자가 조직에서 수행하는 업무 분석 ->데이터 분석-> 요구사항 문서로 명세화





03 개념적 설계

개채와 속성 추출->관계 추출->E-R다이어그램 작성



1)개체와 속성 추출

객체는 현실 세계에서 어떤 조직을 운영하는데 사람과 사물과 같이 구별되는 모든 것을 의미한다.

ex)

병원->환자, 의사, 간호사 등



한빛 마트에 회원으로 가입하려면 회원아이디, 비밀번호, 이름, 나이, 직업을 입력해야 한다.



명사를 추출해서 개체를 뽑음. 그와 관련된 속성을 추출



2)관계 추출

동사에 밑줄을 그어서 추출한다.



3) E-R 다이어그램 작성

추출한 명사와 동사를 바탕으로 E-R 다이어그램을 그린다.





04 논리적 설계



1) 릴레이션 스키마 변환 규칙

1.1 규칙1: 모든 개체는 릴레이션으로 변환한다.

E-R 다이어그램의 각 개체를 하나의 릴레이션으로 변환한다. 개체의 이름을 릴레이션 이름으로 하고, 개체가 가진 속성도 릴레이션 속성으로 그대로 변환한다.



1.2 규칙2: 다대다 관계는 릴레이션으로 변환한다.

E-R 다이어그램이 있는 다대다 n:m 관계를 하나의 릴레이션으로 변환한다.

관계의 이름을 릴레이션의 이름으로 하고, 관계의 속성도 릴레이션의 속성으로 그대로 변환한다.



1.3 규칙3: 일대다 관계는 외래키로 표현한다.

E-R 다이어그램에 있는 일대다 관계는 릴레이션으로 변환하지 않고 외래키로만 표현한다.

세부규칙으로 나누어 표현한다.

규칙 3-1: 일반적인 일대다 관계는 외래키로 표현한다.

규칙 3-2: 약한 개체가 참여하는 일대다 관계는 외래키를 포함해서 기본키로 지정한다.



1.4 규칙4: 일대일 관계는 외래키로 표현한다.

규칙 4-1: 일반적인 일대일 관계는 외래키를 서로 주고받는다.

규칙 4-2: 일대일 관계에 필수적으로 참여하는 개체의 릴레이션만 외래키로 받는다.

규칙 4-3: 모든 개체가 일대일 관계에 필수적으로 참여하면 릴레이션 하나로 합친다.



1.5 규칙5: 다중 값 속성은 릴레이션으로 변환한다.



1.6 기타 고려 사항

기본 변환 규칙에서는 다대다 관계만 릴레이션으로 변환하였지만 일대일, 일대다, 관계도 릴레이션으로 변환할 수 있다. 속성이 많은 관계 유형에 상관없이 릴레이션으로 변환하는 것을 고려할 수 있다.



2)릴레이션 스키마 반환 규칙을 이용한 논리적 설계

논리적 설계를 위해 E-R 다이어그램을 릴레이션 스키마로 변환할 때는 변환 규칙을 순서대로 적용하면 된다.

해당되지 않은 규칙을 제외하고 다음으로 넘어간다.



05 물리적 설계의 구현

논리적 설계 단계에서 릴레이션 스키마의 설계를 완료하면, 물리적 설계 단계에서는 하드웨어나 운영체제의 특성을 고려하여 필요한 인덱스의 구조나 내부 저장 구조 등에 대한 물리적인 구조를 설계한다. 그리고 마지막으로 DBMS를 이용해 SQL문을 작성하고 이를 실행시켜서 데이터베이스를 실제로 생성하면 데이터베이스 개발이 완료된다.
