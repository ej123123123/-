1.1 What is the Internet?
1) 볼트와 너트처럼 하드웨어와 소프트웨어가 인터넷을 만든다.

2) 넓게 퍼진 애플리케이션에 서비스를 제공하는 것이다.



1.1.1 A nuts-and-Bolts Description



모든 인터넷에 연결되는 디바이스들을 hosts or end systems이라 부른다.

각각의 기기들(컴퓨터, 스마트폰 등)이 이에 해당하며, 이는 네트워크에 연결되어 있다.



이는 communication link에 의해 연결되어 있는데, 이는 물리적인 선을 말한다.

케이블, 구리선, 섬유 등에 의해 연결된 것.

(coaxial cable, copper wire, optical fiber, radio spectrum 등)



packet은 정보를 전달하는 일정한 단위이며, 정보는 한번에 가는 것이 아니라 일정한 단위로 간다.



packet-switched network(transport packets)는 고속도로 위의 네트워크랑 비슷하다.

앤드시스템이 서비스를 가능하도록 중간에서 길을 만들어주는 역할을 한다. 라우터나 link-layer switchef라고도 불린다..



엔드시스템은 인터넷에 Internet Service Providers(ISPs)를 통해 인터넷에 접근한다.

인터넷은 네트워크의 네트워크이다.



TCP(Transmission Control Protocoal)랑 IP(Internet Protocol)는 가장 중요한 프로토콜이다.



1.1.2 A services Description
인터넷을 애플리케이션에게 서비스를 제공하는 기반시설로 말할 수 있다.

애플리케이션은 곳곳에 퍼져있다. 그래서 각각 정보를 교환한다.



1.1.3 What is protocol?
무엇을 의사소통하고, 어떻게 의사소통하고, 언제 의사소통할 줄 아는지를 상호 동의하는 것이 중요하다.



A human Analogy

인간의 상황에서도 같다. 사람이 서로 이야기를 주고 받으려면 필요한 방식들이 있다.





Network Protocols

서로 메시지를 주고 받는 개체간의 형식과 순서 등을 규약한다.





1.2 The network Edge
1.2.1 Access Networks
같은 연결선에 있거나, 같은 시스템 상에 있으면 서로 접근할 수 있다.



Home Access:DSL, Cable, FTTH, Dial-up, and Satelite등이 있다.



DSL모뎀이나 선을 통해서 다른 기기를 연결한다.



Netwwork edge

Hosts:client and servers

노드의 맨 마지막에 있는 것은 서버와 클라이언트가 있다.



Access networks, physical media

인터넷에 접속하기 위한 방법을 제공하기 위한 네트워크





1.3 The network core
패킷스위치의 메쉬, 인터넷과 end systems들을 연결한다.

라우터:경로를 결정해서 넘겨주는 것!



Forwarding: 어디로 내보내는지를 결정해야함. 패킷에는 그 힌트가 있다.






1.3.1 Packet Switching
데이터를 보내기 위해 그 양을 잘라서 보내는데, 라우터를 통해서 데이터가 연결된다

(라우터 = 링크 레이어 스위치 - 패킷 스위치)



라우터는 이런 패킷을 관리해주는데 패킷이 메모리양을 넘어서면 메모리 손실이 날 수도 있다.



그렇기에 이 패킷을 관리하는 방법이 있다.









1.3.2 Circuit switching

데이터를 옮기는 방법엔 두 가지 방법이 있는데, 서킷 스위칭과 패킷 스위칭이다.



데이터가 가는 길이 정해져 있다.

그렇기에 데이터의 퍼포먼스가 일정하다. 



FDM(frequency division)

한꺼번에 조금씩

TDM(time division)

시간마다 일정량 수행



Packet switching 

각각 길이 하나의 path를 독점하는 것이 아니라 다 통하는 길을 공유한다.

그래서 적은 데이터량에서 좋지만 데이터량이 많아지면 힘들다.





1.3.3 A network of Networks



네트워크와 네트워크를 처음에 연결했었는데, 일일이 다 연결하기 힘들어져서 ISP라는 것을 설정해서 다 각각 연결했다.

그리고 하나의 공통된 ISP를 설정하는 건 힘들기 때문에 각각 지역마다 ISP를 연결하고 다시 ISP끼리 연결을 한다.





1.4 Delay, Loss and Throughput in Packet-Switched Networks
패킷을 손실없이 잘 전달하는 것이 목표다. 그렇기에 어느정도 딜레이가 필요하다.



1.4.1 Overview of Delay in Packet-Switched Networks
딜레이의 종류는 nodal processing delay, qeuing delay, transmission delay, propagation delay가 있다.



프로세싱 딜레이

신호가 망가지지 않았는지 보고, 어디로 패킷을 보내야할지를 결정하는 시간



큐잉 딜레이(queuing)

먼저 도착한 패킷이 있으면 앞에 꺼 가길 기다려야 한다.



트렌스미션 딜레이(transmission)

라우터를 빠져나가는 시간. 모든 패킷이 도착해야 내보낼 수 있다. 



Progagation delay

한 라우터에서 다른 라우터로 가는 시간



트렌스미션은 패킷의 길이에 영향을 받지만, 프로파게이션은 링크의 길이에 영향을 받는다.



1.4.2 Queuing Delay and Packet Loss

큐잉 딜레이는 매우 가변적이다. 

큐잉 딜레이는 들어오는 양에 선형으로 증가하는 게 아니라 기하급수적으로 증가하기 때문에 빨리 빨리 내보내는 것이 중요하다.






Packet Loss

네트워크 코어로 양이 많아지면 패킷 로스가 일어나는데, 딜레이뿐만 아니라 패킷 손실로도 퍼포먼스를 측정할 수 있다.



1.4.4 Throughput in Computer Networks
Throught: 단위 시간당 서버와 수신자 사이의 주고받는 비트양



Bottleneck link: 한 쪽의 링크는 데이터를 많이 송신할 수 있지만, 다른 쪽은 조금만 옮길 수 있다면 조금 보낼 수 있는 쪽에 따라서 그 퍼포먼스가 결정된다.





1.5 Protocol Layers and Their Servie Models
인터넷은 매우 복잡하다. 그렇지만 잘 작동한다 어떻게 이렇게 될까?





1.5.1 Layered Architecture
네트워크는 여러 앱, 웹 등 복잡한 인터넷 환경에서 잘 작동하기 위해 여러 층으로 된 구조를 갖고 있다. 

각각 층으로 분화되어 있기에 수정이 쉽다.


Protocal Layering

프로토콜은 스택구조로 되어 있는데, 위에서부터 아래로 '하향식 접근'을 하는데, 이 순서가 중요하다.



애플리케이션 레이어(Application Layer)

애플리케이션 간의 네트워크를 도와준다



트렌스포트 레이어(Transport Layer)

프로세스와 프로세스 간 데이터 전송 규약



네트워크 층(Network Layer)

라우터에 대한 이야기



링크 레이어(Link Layer)

네트워크 요소간에 데이터 전송에 대한 규약



물리적 레이어(Physical Layer)

선에 있어서 비트에 관한 것





계층화(Layering)의 장점

분리해서 관리하면 좋고, 수정이 편하다.

모듈화는 관리와 업데이트를 편하게 한다.

기능 구현에 있어서 하나를 만들어두면 여러 개에 쓸 수 있다.





1.5.2 Encapsulation





1) 각각의 층에서 메시지와 헤더를 붙인다. 각각의 헤더엔 라우터가 처리할 정보를 담는다. 층이 내려옴에 따라 마지막 층에선 붙는 헤더가 증가한다.

2) 이 헤더에 따라 라우터는 이를 해석하고 목적지로 패킷을 전달한다. 

3) 목적지에 도착하면 아래에 붙은 헤더부터 해석하면서 마지막에 메시지가 남는다.







1. 6 Networks Under Attack
네트워크를 통해서 바이러스나 나쁜 것들이 전달되고 있다.



초기의 방법 중 하나는 도스를 공격하는 것인다.

1) 네트워크에 메시지를 보내서 특정 프로그램을 망친다

2) 패킷을 엄청 보낸다

3) 연결을 엄청나게 시켜서 방황해 빠지게 한다.



